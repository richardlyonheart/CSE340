const invModel = require("../models/inventory-model");
const utilities = require("../utilities/");
const ReviewModel = require("../models/review-model");

const invCont = {};

/* ***************************
 *  Build inventory by classification view
 *************************** */
invCont.buildByClassificationId = async (req, res, next) => {
  try {
    const { classificationId } = req.params; // Destructure for cleaner access
    const data = await invModel.getInventoryByClassificationId(classificationId);

    if (!data || data.length === 0) {
      const error = new Error("Vehicle classification not found");
      error.status = 404;
      throw error;
    }

    const grid = await utilities.buildClassificationGrid(data);
    const nav = await utilities.getNav();
    const className = data[0]?.classification_name || "Vehicles";

    res.render("./inventory/classification", {
      title: `${className} Vehicles`,
      nav,
      grid,
      errors: null,
    });
  } catch (error) {
    console.error("Error in buildByClassificationId:", error.message);
    next(error);
  }
};

/* ***************************
 *  Build vehicle page by inventory ID
 *************************** */
invCont.buildByInvId = async (req, res, next) => {
  try {
    const { invId } = req.params; // Destructure for cleaner access
    const accountId = req.session?.accountId || null;
    const accountFirstName = req.session?.accountFirstName || "";
    const accountLastName = req.session?.accountLastName || "";
    const screenName =
      accountId && accountFirstName && accountLastName
        ? `${accountFirstName.charAt(0)}${accountLastName}`
        : null;

    const data = await invModel.getDetailByVehicleId(invId);
    if (!data) {
      const error = new Error("Vehicle not found");
      error.status = 404;
      throw error;
    }

    console.log("Session data in buildByInvId:", req.session);

    const reviews = await ReviewModel.getReviewsByInvId(invId);
    const vehicleTemplate = await utilities.buildVehiclePage(data);
    const nav = await utilities.getNav();
    const vehicleName = `${data.inv_year} ${data.inv_make} ${data.inv_model}`;

    console.log("Rendering vehicle page with:", {
      loggedIn: !!req.session.accountId,
      accountName: req.session.accountName || "",
      accountId: req.session.accountId,
    });

    res.render("./inventory/vehicle", {
      title: vehicleName,
      nav,
      vehicleTemplate,
      reviews,
      accountId,
      screenName,
      accountName: req.session.accountName || "",
      inv_id: invId,
      inventoryId: invId,
      loggedIn: !!req.session.accountId,
      errors: null,
    });
  } catch (error) {
    console.error("Error in buildByInvId:", error.message);
    next(error);
  }
};

/* ***************************
 *  Return Inventory by Classification as JSON
 *************************** */
invCont.getInventoryJSON = async (req, res, next) => {
  try {
    const classification_id = parseInt(req.params.classification_id, 10); // Ensure it's a number
    const invData = await invModel.getInventoryByClassificationId(classification_id);

    if (invData.length > 0 && invData[0].inv_id) {
      return res.json(invData);
    } else {
      const error = new Error("No data returned for this classification");
      error.status = 404;
      throw error;
    }
  } catch (error) {
    console.error("Error in getInventoryJSON:", error.message);
    next(error);
  }
};

module.exports = invCont;